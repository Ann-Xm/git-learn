1.mkdir                          --创建文件夹
2.git init                       --初始化仓库
3.git add 文件名                  --添加文件
4.git commit -m “提交的描述”      --提交记录
5.git status                     --查看状态
6.git diff                       --查看对比
7.cat 文件名                      --查看文件
8.git log --pretty=online         --查看记录
9.git reset --hard HEAD^          --退回到上一版本(^的数量代表退回的版本数，数量太多用~数量)
10.git reset --hard 版本号         --退回到对应版本号的版本
11.git reflog                     --查看历史版本号
12.git rm 文件名                   --删除对应文件
13.git checkout 文件名             --恢复版本库对应文件到工作区
14.git remote add origin git@github.com:Ann-Xm/an.com     --关联本地到github仓库
15.git remote rm origin             --删除关联
16.git push -u origin master        --推送本地提交到远程仓库 master-分支
17.git branch                       --查看分支
18.git branch 名字                  --创建分支
19.git checkout/switch 名字          --切换分支
20.git checkout -b/switch -c 名字    --创建并切换分支
21.git merge (--no-ff -m "描述") 名字                   --合并分支 (禁用Fast forward)
22.git branch -d 名字                --删除分支  -D 强制删除
23.git log --graph                   --查看分支合并图
24.git stash                         --储藏文件
25.git stash list                    --查看储藏的文件列表
26.git stash apply                   --恢复储藏的文件
27.git stash drop                    --删除储藏的文件
28.git stash pop                     --恢复并删除储藏的文件
29.git stash apply stash@{对应号}     --恢复对应号的储藏的文件
30.git cherry-pick 提交的版本号       --复制对应版本号提交到当前分支
31.git remote                        --查看远程库的信息
32.git remote -v                     --查看详细的远程库的信息
33.git pull                          --拉取
34.git rebase                        --整理提交记录为一条直线
35.git tag 标签号                     --添加一个新标签
36.git tag                           --查看标签
37.git tag 标签号 版本号               --在对应版本添加一个新标签
38.git show 标签号                    --查看对应标签的log
39.git tag -d 标签号                   --删除标签
40.git push origin 标签号              --推送标签到远程仓库
41.git push origin --tags             --一次性推送所有本地标签到远程仓库
42.git tag -d 标签号
     git push origin ：refs/tags/标签号    --从远程仓库删除对应标签
43.git config --global alias.简写 全称     --之后简写的就能表示全称   每个仓库的配置文件        在.git/config，当前用户在.gitconfig中，可以直接修改或添加简写
